disabled_rules: # rule identifiers to exclude from running
  - identifier_name
  - type_name
  - large_tuple
  - force_try
  - implicit_getter
  - empty_enum_arguments
  - multiple_closures_with_trailing_closure
  - trailing_whitespace
  - legacy_constructor
  #- nesting
  #- function_parameter_count
  #- return_arrow_whitespace
  #- vertical_whitespace
  #- operator_whitespace
  #- leading_whitespace
  #- mark
  #- for_where
  #- force_cast
  #- line_length
  #- function_body_length
  #- statement_position
  #- empty_count
  #- unused_closure_parameter
  #- unused_optional_binding
  #- redundant_optional_initialization
  #- unneeded_break_in_switch
  #- cyclomatic_complexity
  #- empty_parameters
  #- opening_brace
  #- weak_delegate
  #- void_return
  #- shorthand_operator
  #- control_statement
  #- trailing_newline
  #- colon
  #- comma
  #- trailing_semicolon


function_parameter_count:
    - 20
cyclomatic_complexity:
   - 100
line_length:
   - 2500
function_body_length:
   - 250

excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods
  - Project/R.generated.swift

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly. Give warning only for force casting

force_try:
  severity: warning # explicitly. Give warning only for force try

type_body_length:
  - 1000 # warning
  - 2500 # error

# or they can set both explicitly
file_length:
  warning: 3000
  error: 4000

large_tuple: # warn user when using 3 values in tuple, give error if there are 4
   - 3
   - 4
   
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names

reporter: "xcode"
